{
  "name": "vscode-sailpoint-saas-connectivity",
  "displayName": "SailPoint SaaS Connectivity",
  "description": "Extension to develop SaaS connectors for SailPoint Identity Security Cloud",
  "version": "0.0.1",
  "publisher": "yannick-beot-sp",
  "license": "SEE LICENSE IN LICENSE.txt",
  "icon": "resources/saas-connectivity.png",
  "bugs": {
    "url": "https://github.com/yannick-beot-sp/vscode-sailpoint-saas-connectivity/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yannick-beot-sp/vscode-sailpoint-saas-connectivity.git"
  },
  "homepage": "https://github.com/yannick-beot-sp/vscode-sailpoint-saas-connectivity/",
  "engines": {
    "vscode": "^1.97.0"
  },
  "extensionDependencies": [
    "yannick-beot-sp.vscode-sailpoint-identitynow"
  ],
  "categories": [
    "Other"
  ],
  "keywords": [
    "SailPoint",
    "IdentityNow",
    "Identity Security Cloud",
    "SaaS Connectivity"
  ],
  "preview": true,
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "sailpoint",
          "title": "SailPoint Identity Security Cloud",
          "icon": "resources/isc.svg"
        }
      ]
    },
    "views": {
      "sailpoint": [
        {
          "id": "vscode-sailpoint-saas-connectivity.view",
          "name": "SaaS Connectivity",
          "icon": "resources/isc.svg"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "vscode-sailpoint-saas-connectivity.view",
        "contents": "No tenant.\n[Add Tenant](command:vscode-sailpoint-identitynow.add-tenant)"
      }
    ],
    "commands": [
      {
        "command": "vscode-sailpoint-saas-connectivity.add-tenant",
        "title": "Add tenant...",
        "icon": "$(add)"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.tenant.set-writable",
        "title": "Read-only",
        "icon": "$(lock)"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.tenant.set-readonly",
        "title": "Writable",
        "icon": "$(unlock)"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.folder.add-root",
        "title": "Add folder",
        "icon": "$(new-folder)"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.folder.add",
        "title": "Add folder",
        "icon": "$(new-folder)"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.folder.remove",
        "title": "Remove folder"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.folder.rename",
        "title": "Rename folder"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.sources.logs.start",
        "title": "Start streaming logs"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.sources.logs.stop",
        "title": "Stop streaming logs"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.connector.create",
        "title": "Create connector",
        "icon": "$(add)"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.connector.rename",
        "title": "Rename"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.connector.delete",
        "title": "Delete connector"
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.connector.upload",
        "title": "Upload connector..."
      },
      {
        "command": "vscode-sailpoint-saas-connectivity.connector.deploy",
        "title": "Deploy connector..."
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-sailpoint-saas-connectivity.add-tenant",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.tenant.set-readonly",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.tenant.set-writable",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.folder.add-root",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.folder.add",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.folder.remove",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.refresh",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.folder.rename",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.sources.logs.start",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.sources.logs.stop",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.create",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.rename",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.delete",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.upload",
          "when": "never"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.deploy",
          "when": "never"
        }
      ],
      "view/title": [
        {
          "command": "vscode-sailpoint-saas-connectivity.folder.add-root",
          "when": "view == vscode-sailpoint-saas-connectivity.view",
          "group": "navigation"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.add-tenant",
          "when": "view == vscode-sailpoint-saas-connectivity.view",
          "group": "navigation"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.refresh",
          "when": "view == vscode-sailpoint-saas-connectivity.view",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "vscode-sailpoint-saas-connectivity.tenant.set-readonly",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == tenantWritable",
          "group": "inline@1"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.tenant.set-writable",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == tenantReadOnly",
          "group": "inline@1"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.folder.add",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == folder"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.folder.remove",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == folder"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.folder.rename",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == folder"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.sources.logs.start",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == source"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.sources.logs.stop",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == source"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.refresh",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem =~ /sources|connectors/",
          "group": "inline@50"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.create",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == connectors",
          "group": "inline@1"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.rename",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == connector"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.delete",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == connector"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.upload",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == connector"
        },
        {
          "command": "vscode-sailpoint-saas-connectivity.connector.deploy",
          "when": "view == vscode-sailpoint-saas-connectivity.view && viewItem == connector"
        }
      ]
    },
    "jsonValidation": [
      {
        "fileMatch": "**/connector-spec.json",
        "url": "./schemas/connector-spec.schema.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.25.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "axios": "^1.7.9",
    "sailpoint-api-client": "^1.5.0",
    "vscode-sailpoint-saas-connectivity": "file:"
  }
}
